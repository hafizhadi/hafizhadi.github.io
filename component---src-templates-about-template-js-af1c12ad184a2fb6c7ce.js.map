{"version":3,"sources":["webpack:///./src/components/textdate.js","webpack:///./src/templates/aboutTemplate.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["TextDateWrapper","Object","styled_base_browser_esm","target","name","styles","TextDate","render","core_browser_esm","href","this","props","link","css","_ref","text","date","React","Component","defaultProps","renderAst","rehypeReact","createElement","components","text-date","Compiler","blackLinkCss","noMarginPaddingcss","AboutWrapper","AboutHeadWrapper","AboutCategoryWrapper","AboutBodyWrapper","aboutQuery","AboutTemplate","_ref6","data","pageContext","layout","seo","title","gatsby_browser_entry","to","css_browser_esm","aboutTemplate_ref","_ref2","markdownType","_ref3","_ref4","_ref5","academic","htmlAst","m","module","exports","require","default","loader","enqueue","createContext","ProdPageRenderer","location","pageResources","InternalPageRenderer","assign","json","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_1__","metaDescription","siteMetadata","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","a","htmlAttributes","titleTemplate","content","property","author","concat","noMarginPaddingCss","siteTitleCss","blackBoxCss","HeaderWrapper","SitenameWrapper","SiteNavWrapper","SiteNavlink","Header","siteTitle","PageWrapper","ContentWrapper","Layout","children","_2571293337","header","layout_ref","layout_ref2","Date","getFullYear","gatsby_image_default","fixed","file","childImageSharp"],"mappings":"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","file":"component---src-templates-about-template-js-af1c12ad184a2fb6c7ce.js","sourcesContent":["/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\";\r\nimport { css } from \"@emotion/core\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst TextDateWrapper = styled.div`\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  justify-content: space-between;\r\n  align-items: baseline;\r\n`\r\n\r\nexport default class TextDate extends React.Component{\r\n  static defaultProps = {\r\n    text: ``,\r\n    date: ``,\r\n    link: `/`,\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <TextDateWrapper>\r\n        <a target=\"_blank\" href={this.props.link}><h4 css={css`:hover{color:black;}`}>{this.props.text}</h4></a>\r\n        <h6>{this.props.date}</h6>\r\n      </TextDateWrapper>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Link, graphql } from 'gatsby';\r\nimport Layout from '../components/layout';\r\nimport SEO from '../components/seo';\r\n\r\nimport { css } from \"@emotion/core\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nimport rehypeReact from \"rehype-react\"\r\nimport TextDate from \"../components/textdate\";\r\n\r\nconst renderAst = new rehypeReact({\r\n    createElement: React.createElement,\r\n    components: { \"text-date\": TextDate },\r\n}).Compiler\r\n\r\n// CSS\r\n\r\nconst blackLinkCss = css`\r\n    color: black;\r\n    padding: 0.1em 0.3em;\r\n    margin: 0;\r\n\r\n    :hover {\r\n        color: white;\r\n        background-color: black;\r\n    }\r\n`\r\n\r\nconst noMarginPaddingcss = css`\r\n    margin: 0;\r\n    padding: 0;\r\n`\r\n\r\nconst AboutWrapper = styled.div`\r\n\r\n`\r\n\r\nconst AboutHeadWrapper = styled.div`\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n\r\n    justify-content: space-between;\r\n    align-items: baseline;\r\n`\r\nconst AboutCategoryWrapper = styled.div`\r\n    display: flex;\r\n    flex-flow: row nowrap;\r\n\r\n    > {\r\n        :not(:last-child){\r\n            margin-right: 0.5em;\r\n        }\r\n    }\r\n`\r\n\r\nconst AboutBodyWrapper = styled.div`\r\n    margin: 1em 0;\r\n\r\n    h3 {\r\n        margin: 2em 0 0.5em 0;\r\n        color: black;\r\n    }\r\n\r\n    h4 {\r\n        margin: 1.5em 0 0.5em 0;\r\n    }\r\n\r\n    h5,h6,p {\r\n        margin: 0.75em 0;\r\n    }\r\n\r\n    ul, ol {\r\n        margin: 0 2em;\r\n    }\r\n\r\n    ul > li, ol > li {\r\n        margin: 0;\r\n    }\r\n`\r\n\r\nconst AboutTemplate = ({ data, pageContext }) => (\r\n    <Layout>\r\n        <SEO title=\"About\" />\r\n        <AboutWrapper>\r\n            <AboutHeadWrapper>\r\n                <Link to=\"/about/academic/\"><h3 css={[noMarginPaddingcss, css`color: black; font-weight: bold; :hover{color:gray;}`]}>About</h3></Link>\r\n                <AboutCategoryWrapper css={css`display: flex; flex-flow: row nowrap`}>\r\n                    <Link to=\"/about/academic/\"><h5 css={[blackLinkCss, (pageContext.markdownType === `about-academic`) && css`background-color: black; color: white;`]}>Academic</h5></Link>\r\n                    <Link to=\"/about/professional/\"><h5 css={[blackLinkCss, (pageContext.markdownType === `about-professional`) && css`background-color: black; color: white;`]}>Professional</h5></Link>\r\n                    <Link to=\"/about/other/\"><h5 css={[blackLinkCss, (pageContext.markdownType === `about-other`) && css`background-color: black; color: white;`]}>Other</h5></Link>\r\n                </AboutCategoryWrapper>\r\n            </AboutHeadWrapper>\r\n            <AboutBodyWrapper>{renderAst(data.academic.htmlAst)}</AboutBodyWrapper>\r\n        </AboutWrapper>\r\n    </Layout>\r\n);\r\n\r\nexport default AboutTemplate;\r\n\r\nexport const aboutQuery = graphql`\r\n    query($markdownType: String!) {\r\n        academic: markdownRemark(frontmatter: { type: { eq: $markdownType } }) {\r\n            htmlAst\r\n        }\r\n    }`","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s - ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n","import { Link } from \"gatsby\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\n\r\nimport { css } from \"@emotion/core\"\r\nimport styled from \"@emotion/styled\"\r\n\r\n// STYLING CONSTANTS FOR COMPOSITION\r\nconst noMarginPaddingCss = css`\r\n  margin: 0;\r\n  padding: 0;\r\n`\r\n\r\nconst siteTitleCss = css`\r\n  color: black; \r\n  font-size: 2.5em;\r\n\r\n  :hover {\r\n    color: gray;\r\n  }\r\n`\r\n\r\nconst blackBoxCss = css`\r\n    color: white;\r\n    background-color: black;\r\n    padding: 0.2em 0.3em;\r\n\r\n    :hover {\r\n        background-color: gray;\r\n    }\r\n`\r\n\r\nconst HeaderWrapper = styled.header`\r\n  display: flex;\r\n  flex-flow: column wrap;\r\n\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  padding: 2em 0 1.5em 0;\r\n\r\n  @media all and (min-width: 800px) {\r\n    justify-content: space-between;\r\n    align-items: baseline;\r\n    flex-flow: row wrap;\r\n  }\r\n`\r\n\r\nconst SitenameWrapper = styled.div`\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  align-items: baseline;\r\n`\r\n\r\nconst SiteNavWrapper = styled.div`\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  margin-top: 1em;\r\n`\r\n\r\nconst SiteNavlink = styled(props => <Link {...props} />)`\r\n  color: black;\r\n  \r\n  :not(:last-child){\r\n    margin-right: 0.5em;\r\n  }\r\n`\r\n\r\nconst Header = ({ siteTitle }) => (\r\n  <HeaderWrapper>\r\n    <SitenameWrapper>\r\n      <Link><h1 css={[noMarginPaddingCss, siteTitleCss]}>HAFIZH</h1></Link>\r\n      <h2 css={[noMarginPaddingCss, css`margin-left: 0.25em;`]}>Adi Prasetya</h2>\r\n    </SitenameWrapper>\r\n    <SiteNavWrapper>\r\n      <SiteNavlink to=\"/blog/\"><h4 css={[noMarginPaddingCss, blackBoxCss]}>BLOG</h4></SiteNavlink>\r\n      <SiteNavlink to=\"/about/academic/\"><h4 css={[noMarginPaddingCss, blackBoxCss]}>ABOUT</h4></SiteNavlink>\r\n      {/*<SiteNavlink to=\"/\"><h4 css={[noMarginPaddingCss, blackBoxCss]}>Find Me</h4></SiteNavlink>*/}\r\n    </SiteNavWrapper>\r\n  </HeaderWrapper>\r\n)\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport Img from \"gatsby-image\";\r\n\r\nimport Header from \"./header\"\r\n\r\nimport { css } from \"@emotion/core\"\r\nimport styled from \"@emotion/styled\"\r\n\r\nconst PageWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 0 1.5em 1em 1.5em;\r\n`\r\n\r\nconst ContentWrapper = styled.div`\r\n  display: flex;\r\n\r\n  flex-flow: column wrap;\r\n  justify-content: center;\r\n  \r\n  width: 900px;\r\n  max-width: 900px;\r\n`\r\n\r\nconst Layout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n      file(relativePath: { eq: \"icon.png\" }) {\r\n      childImageSharp {\r\n        # Specify the image processing specifications right in the query.\r\n        # Makes it trivial to update as your page's design changes.\r\n        fixed(height: 25) {\r\n          ...GatsbyImageSharpFixed\r\n        }\r\n      }\r\n    }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <ContentWrapper>\r\n        <Header siteTitle={data.site.siteMetadata.title} />\r\n        \r\n        <div>\r\n          <main>\r\n            {children}\r\n          </main>\r\n        </div>\r\n        \r\n        <footer css={css`align-self: center;`}>\r\n          <h5 css={css`margin: 1em; padding: 0;`}>© {new Date().getFullYear()} HAFIZH ADI PRASETYA</h5>\r\n        </footer>\r\n        <Img css={css`align-self: center; margin: 0; padding: 0;`} fixed={data.file.childImageSharp.fixed} />\r\n      </ContentWrapper>\r\n    </PageWrapper>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}