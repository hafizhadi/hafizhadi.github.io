{"version":3,"sources":["webpack:///./src/templates/bloglistTemplate.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["entryElementsCss","name","styles","blackBoxCss","BlogWrapper","Object","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_5__","target","BlogEntry","NavigationWrapper","BreadcrumbWrapper","BreadcrumbHeading","EntryHeaderWrapper","BlogPage","_ref9","data","pageContext","posts","allMarkdownRemark","edges","isTag","tag","tagAppend","currentPage","numPages","isFirst","isLast","prevPage","toString","nextPage","_emotion_core__WEBPACK_IMPORTED_MODULE_6__","_components_layout__WEBPACK_IMPORTED_MODULE_10__","_components_seo__WEBPACK_IMPORTED_MODULE_11__","title","gatsby__WEBPACK_IMPORTED_MODULE_9__","to","css","map","post","key","node","id","fields","slug","frontmatter","date","excerpt","tags","_ref","kebabCase","_emotion_css__WEBPACK_IMPORTED_MODULE_2__","_ref2","_ref3","rel","_ref4","_ref5","Array","from","length","_","i","_ref6","_ref7","_ref8","pageQuery","m","module","exports","require","default","loader","enqueue","React","createContext","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","assign","json","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_1__","metaDescription","siteMetadata","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","a","htmlAttributes","titleTemplate","content","property","author","concat","defaultProps","noMarginPaddingCss","siteTitleCss","HeaderWrapper","styled_base_browser_esm","SitenameWrapper","SiteNavWrapper","SiteNavlink","props","core_browser_esm","gatsby_browser_entry","Header","siteTitle","css_browser_esm","PageWrapper","ContentWrapper","Layout","children","_2571293337","header","layout_ref","layout_ref2","Date","getFullYear","gatsby_image_default","fixed","file","childImageSharp"],"mappings":"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","file":"component---src-templates-bloglist-template-js-3fb1acbf30051de8cdf8.js","sourcesContent":["import React from 'react';\r\nimport { kebabCase } from 'lodash';\r\nimport { Link, graphql } from 'gatsby';\r\nimport Layout from '../components/layout';\r\nimport SEO from '../components/seo';\r\n\r\nimport { css } from \"@emotion/core\"\r\nimport styled from \"@emotion/styled\"\r\n\r\n\r\n// STYLING CONSTANTS FOR COMPOSITION\r\nconst entryElementsCss = css`\r\n    margin: 0.25em 0;\r\n`\r\n\r\nconst blackBoxCss = css`\r\n    color: white;\r\n    background-color: black;\r\n    padding: 0.2em 0.3em;\r\n\r\n    :hover {\r\n        background-color: gray;\r\n        color:white;\r\n    }\r\n`\r\n\r\n// STYLED COMPONENTS\r\n\r\nconst BlogWrapper = styled.div`\r\n    display: flex;\r\n\r\n    flex-flow: column wrap;\r\n    justify-content: center;\r\n    `\r\n\r\nconst BlogEntry = styled.article`\r\n    text-align: left;    \r\n\r\n    border: 0.25em solid;\r\n    margin: 0.5em 0;\r\n    padding: 0.5em;\r\n`\r\n\r\nconst NavigationWrapper = styled.div`\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n\r\n    align-items: baseline;\r\n    justify-content: space-between;\r\n`\r\n\r\nconst BreadcrumbWrapper = styled.div`\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n\r\n    justify-content: space-between;\r\n`\r\n\r\nconst BreadcrumbHeading = styled.h3`\r\n    color: black;\r\n    font-weight: bold;\r\n    :hover {\r\n        color: gray;\r\n    }\r\n\r\n    margin 0.25em 0;\r\n    padding 0;\r\n`\r\n\r\nconst EntryHeaderWrapper = styled.div`\r\n    display: flex; \r\n    flex-flow: row nowrap; \r\n    justify-content: space-between;\r\n    align-items: center;\r\n`\r\n\r\n\r\n\r\nconst BlogPage = ({ data, pageContext }) => {\r\n\r\n    // Blog posts\r\n    const posts = data.allMarkdownRemark.edges;\r\n    \r\n    // Helper constant for tag page differentiation\r\n    const isTag = pageContext.isTag;\r\n    const tag = pageContext.tag;\r\n    const tagAppend = isTag ? \"/\" + tag : \"\" \r\n    \r\n    // Navigation constants\r\n    const currentPage = pageContext.currentPage;\r\n    const numPages = pageContext.numPages; \r\n    const isFirst = currentPage === 1;\r\n    const isLast = currentPage === numPages;\r\n    const prevPage = currentPage - 1 === 1 ? `/blog${tagAppend}/` : `/blog${tagAppend}/${(currentPage - 1).toString()}/`;\r\n    const nextPage = `/blog${tagAppend}/${(currentPage + 1).toString()}/`;\r\n\r\n    return (\r\n        <Layout>\r\n            <SEO title=\"Blog\" />\r\n            <BlogWrapper>\r\n                <BreadcrumbWrapper>\r\n                    <Link to=\"/blog\"><BreadcrumbHeading>Blog</BreadcrumbHeading></Link>\r\n                    {isTag && <Link to={`/blog/${tag}`}><BreadcrumbHeading css={css`${blackBoxCss};\r\n                                                            font-weight: normal;\r\n                                                            margin: 0;`}>{tag}</BreadcrumbHeading></Link>}\r\n                </BreadcrumbWrapper>\r\n                {posts.map(post => (\r\n                    <BlogEntry key={post.node.id}>\r\n                        <EntryHeaderWrapper>\r\n                            <Link to={post.node.fields.slug}><h3 css={css`${entryElementsCss}; ${blackBoxCss}`}>{post.node.frontmatter.title}</h3></Link>\r\n                            <h5 css={css` ${entryElementsCss}; flex-basis: max-content;`}>({post.node.frontmatter.date})</h5>\r\n                        </EntryHeaderWrapper>\r\n                        <div>\r\n                            <p css={entryElementsCss}>{post.node.excerpt}</p>\r\n                        </div>\r\n                        {post.node.frontmatter.tags ? (\r\n                            <div css={css`display: flex; flex-flow: row wrap; margin-top: 0.5em;`}>\r\n                                {post.node.frontmatter.tags.map(tag => (\r\n                                    <Link to={`/blog/${kebabCase(tag)}`}><h4 css={[css`margin: 0 0.5em 0 0;`, blackBoxCss]}>{tag}</h4></Link>\r\n                                ))}\r\n                            </div>\r\n                        ) : null}\r\n                    </BlogEntry>\r\n                ))}\r\n            </BlogWrapper>\r\n            \r\n            <NavigationWrapper>\r\n                <div>\r\n                    <Link css={isFirst && css`visibility: hidden;`} to={prevPage} rel=\"prev\"> \r\n                        <h4 css={[blackBoxCss, css`padding: 0.25em 2em; margin: 0;`]}>&#8249;</h4> \r\n                    </Link>\r\n                </div>\r\n\r\n                <div css={css`display: flex; flex-flow: row wrap;`}>\r\n                    {Array.from({ length: numPages }, (_, i) => (\r\n                        <Link key={`pagination-number${i + 1}`} to={`/blog${tagAppend}/${i === 0 ? \"\": i + 1}`}>\r\n                            <h4 css={[blackBoxCss, css`padding: 0.15em 0.4em; margin: 0 0.25em 0 0;`]} >{i + 1}</h4>\r\n                        </Link>\r\n                    ))}\r\n                </div>\r\n                \r\n\r\n                    <Link css={isLast && css`visibility: hidden;`} to={nextPage} rel=\"next\"> \r\n                        <h4 css={[blackBoxCss, css`padding: 0.25em 2em; margin: 0;`]}>&#8250;</h4> \r\n                    </Link>\r\n\r\n            </NavigationWrapper>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default BlogPage;\r\n\r\nexport const pageQuery = graphql`\r\n    query ($skip: Int!, $limit: Int!, $tag:[String!] ) {\r\n        allMarkdownRemark( \r\n            limit: $limit, \r\n            sort: { order: DESC, fields: [frontmatter___date ] }, \r\n            skip: $skip,\r\n            filter: { frontmatter: {     tags: { in: $tag }\r\n                                         type: { eq: \"blog\"}} },\r\n        ) {\r\n            totalCount\r\n            edges {\r\n                node {\r\n                    id\r\n                    excerpt(pruneLength:250)\r\n                    fields {\r\n                        slug\r\n                    }\r\n                    frontmatter {\r\n                        date(formatString: \"MMMM DD, YYYY\")\r\n                        title\r\n                        tags\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s - ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n","import { Link } from \"gatsby\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\n\r\nimport { css } from \"@emotion/core\"\r\nimport styled from \"@emotion/styled\"\r\n\r\n// STYLING CONSTANTS FOR COMPOSITION\r\nconst noMarginPaddingCss = css`\r\n  margin: 0;\r\n  padding: 0;\r\n`\r\n\r\nconst siteTitleCss = css`\r\n  color: black; \r\n  font-size: 2.5em;\r\n\r\n  :hover {\r\n    color: gray;\r\n  }\r\n`\r\n\r\nconst blackBoxCss = css`\r\n    color: white;\r\n    background-color: black;\r\n    padding: 0.2em 0.3em;\r\n\r\n    :hover {\r\n        background-color: gray;\r\n    }\r\n`\r\n\r\nconst HeaderWrapper = styled.header`\r\n  display: flex;\r\n  flex-flow: column wrap;\r\n\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  padding: 2em 0 1.5em 0;\r\n\r\n  @media all and (min-width: 800px) {\r\n    justify-content: space-between;\r\n    align-items: baseline;\r\n    flex-flow: row wrap;\r\n  }\r\n`\r\n\r\nconst SitenameWrapper = styled.div`\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  align-items: baseline;\r\n`\r\n\r\nconst SiteNavWrapper = styled.div`\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  margin-top: 1em;\r\n`\r\n\r\nconst SiteNavlink = styled(props => <Link {...props} />)`\r\n  color: black;\r\n  \r\n  :not(:last-child){\r\n    margin-right: 0.5em;\r\n  }\r\n`\r\n\r\nconst Header = ({ siteTitle }) => (\r\n  <HeaderWrapper>\r\n    <SitenameWrapper>\r\n      <Link><h1 css={[noMarginPaddingCss, siteTitleCss]}>HAFIZH</h1></Link>\r\n      <h2 css={[noMarginPaddingCss, css`margin-left: 0.25em;`]}>Adi Prasetya</h2>\r\n    </SitenameWrapper>\r\n    <SiteNavWrapper>\r\n      <SiteNavlink to=\"/blog/\"><h4 css={[noMarginPaddingCss, blackBoxCss]}>BLOG</h4></SiteNavlink>\r\n      <SiteNavlink to=\"/about/academic/\"><h4 css={[noMarginPaddingCss, blackBoxCss]}>ABOUT</h4></SiteNavlink>\r\n      {/*<SiteNavlink to=\"/\"><h4 css={[noMarginPaddingCss, blackBoxCss]}>Find Me</h4></SiteNavlink>*/}\r\n    </SiteNavWrapper>\r\n  </HeaderWrapper>\r\n)\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport Img from \"gatsby-image\";\r\n\r\nimport Header from \"./header\"\r\n\r\nimport { css } from \"@emotion/core\"\r\nimport styled from \"@emotion/styled\"\r\n\r\nconst PageWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 0 1.5em 1em 1.5em;\r\n`\r\n\r\nconst ContentWrapper = styled.div`\r\n  display: flex;\r\n\r\n  flex-flow: column wrap;\r\n  justify-content: center;\r\n  \r\n  width: 900px;\r\n  max-width: 900px;\r\n`\r\n\r\nconst Layout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n      file(relativePath: { eq: \"icon.png\" }) {\r\n      childImageSharp {\r\n        # Specify the image processing specifications right in the query.\r\n        # Makes it trivial to update as your page's design changes.\r\n        fixed(height: 25) {\r\n          ...GatsbyImageSharpFixed\r\n        }\r\n      }\r\n    }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <ContentWrapper>\r\n        <Header siteTitle={data.site.siteMetadata.title} />\r\n        \r\n        <div>\r\n          <main>\r\n            {children}\r\n          </main>\r\n        </div>\r\n        \r\n        <footer css={css`align-self: center;`}>\r\n          <h5 css={css`margin: 1em; padding: 0;`}>© {new Date().getFullYear()} HAFIZH ADI PRASETYA</h5>\r\n        </footer>\r\n        <Img css={css`align-self: center; margin: 0; padding: 0;`} fixed={data.file.childImageSharp.fixed} />\r\n      </ContentWrapper>\r\n    </PageWrapper>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}