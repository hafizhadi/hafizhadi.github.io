{"version":3,"sources":["webpack:///./src/templates/postTemplate.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["blackBoxCss","name","styles","noMarginPaddingcss","PostWrapper","Object","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","target","PostHeadWrapper","PostTagWrapper","PostBodyWrapper","PostTemplate","_ref","markdownRemark","data","frontmatter","html","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_5__","_components_seo__WEBPACK_IMPORTED_MODULE_6__","title","css","date","tags","map","tag","gatsby__WEBPACK_IMPORTED_MODULE_4__","to","kebabCase","dangerouslySetInnerHTML","__html","pageQuery","m","module","exports","require","default","loader","enqueue","React","createContext","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","assign","json","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_1__","metaDescription","siteMetadata","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","a","htmlAttributes","titleTemplate","content","property","author","concat","defaultProps","noMarginPaddingCss","siteTitleCss","HeaderWrapper","styled_base_browser_esm","SitenameWrapper","SiteNavWrapper","SiteNavlink","props","core_browser_esm","gatsby_browser_entry","Header","_ref2","siteTitle","css_browser_esm","PageWrapper","ContentWrapper","Layout","_ref4","children","_2571293337","header","layout_ref","layout_ref2","Date","getFullYear","gatsby_image_default","_ref3","fixed","file","childImageSharp"],"mappings":"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","file":"component---src-templates-post-template-js-21937454ed75039434c1.js","sourcesContent":["import React from 'react';\r\nimport { kebabCase } from 'lodash';\r\nimport { Link, graphql } from 'gatsby';\r\nimport Layout from '../components/layout';\r\nimport SEO from '../components/seo';\r\n\r\nimport { css } from \"@emotion/core\";\r\nimport styled from \"@emotion/styled\";\r\n\r\n// STYLING CONSTANTS FOR COMPOSITION\r\nconst blackBoxCss = css`\r\n    color: white;\r\n    background-color: black;\r\n    padding: 0.1em 0.3em;\r\n\r\n    :hover {\r\n        background-color: gray;\r\n    }\r\n`\r\n\r\nconst noMarginPaddingcss = css`\r\n    margin: 0;\r\n    padding: 0;\r\n`\r\n\r\n\r\nconst PostWrapper = styled.div`\r\n    display: flex;\r\n    flex-flow: column wrap;\r\n`\r\n\r\nconst PostHeadWrapper = styled.div`\r\n    display: flex;\r\n    flex-flow: row nowrap;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`\r\n\r\nconst PostTagWrapper = styled.div`\r\n    display: flex;\r\n    flex-flow: row nowrap;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n`\r\n\r\nconst PostBodyWrapper = styled.div `\r\n    h1,h2,h3,h4,h5,h6,p {\r\n        margin: 0.75em 0;\r\n    }\r\n\r\n    ul, ol {\r\n        margin: 0 2em;\r\n    }\r\n\r\n    ul > li, ol > li {\r\n        margin: 0.75em;\r\n    }\r\n\r\n    pre {\r\n        margin: 1em 0;\r\n    }\r\n\r\n    pre > code {\r\n        white-space: pre;\r\n        display: block;\r\n    }\r\n`\r\n\r\nconst PostTemplate = ({ data }) => {\r\n    const { markdownRemark } = data;\r\n    const { frontmatter, html } = markdownRemark;\r\n    \r\n    return (\r\n        <Layout>\r\n            <SEO title={frontmatter.title} />\r\n            <PostWrapper>\r\n                <PostHeadWrapper>\r\n                    <h1 css={css`${noMarginPaddingcss}; color: black; font-weight: bold;`}>{ frontmatter.title }</h1>\r\n                    <h5 css={noMarginPaddingcss}>({frontmatter.date })</h5>\r\n                </PostHeadWrapper>\r\n                \r\n                <PostTagWrapper>\r\n                    <h3 css={css`${noMarginPaddingcss}; margin: 0.5em 0;`}>Tags:</h3>\r\n                    {frontmatter.tags.map(tag => (\r\n                        <Link to={`/blog/${kebabCase(tag)}`}><p css={css` ${blackBoxCss}; margin: 0.5em 0.5em;`}>{tag}</p></Link>\r\n                    ))}\r\n                </PostTagWrapper>\r\n\r\n                <PostBodyWrapper>\r\n                    <div dangerouslySetInnerHTML={{ __html: html }}/>\r\n                </PostBodyWrapper>        \r\n            </PostWrapper>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default PostTemplate;\r\n\r\nexport const pageQuery = graphql`\r\n    query($slug: String!) {\r\n        markdownRemark(fields: { slug: { eq: $slug } }) {\r\n            html\r\n            frontmatter {\r\n                date(formatString: \"MMMM DD, YYYY\")\r\n                title\r\n                tags\r\n            }\r\n        }\r\n    }\r\n`;","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s - ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n","import { Link } from \"gatsby\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\n\r\nimport { css } from \"@emotion/core\"\r\nimport styled from \"@emotion/styled\"\r\n\r\n// STYLING CONSTANTS FOR COMPOSITION\r\nconst noMarginPaddingCss = css`\r\n  margin: 0;\r\n  padding: 0;\r\n`\r\n\r\nconst siteTitleCss = css`\r\n  color: black; \r\n  font-size: 2.5em;\r\n\r\n  :hover {\r\n    color: gray;\r\n  }\r\n`\r\n\r\nconst blackBoxCss = css`\r\n    color: white;\r\n    background-color: black;\r\n    padding: 0.2em 0.3em;\r\n\r\n    :hover {\r\n        background-color: gray;\r\n    }\r\n`\r\n\r\nconst HeaderWrapper = styled.header`\r\n  display: flex;\r\n  flex-flow: column wrap;\r\n\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  padding: 2em 0 1.5em 0;\r\n\r\n  @media all and (min-width: 800px) {\r\n    justify-content: space-between;\r\n    align-items: baseline;\r\n    flex-flow: row wrap;\r\n  }\r\n`\r\n\r\nconst SitenameWrapper = styled.div`\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  align-items: baseline;\r\n`\r\n\r\nconst SiteNavWrapper = styled.div`\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  margin-top: 1em;\r\n`\r\n\r\nconst SiteNavlink = styled(props => <Link {...props} />)`\r\n  color: black;\r\n  \r\n  :not(:last-child){\r\n    margin-right: 0.5em;\r\n  }\r\n`\r\n\r\nconst Header = ({ siteTitle }) => (\r\n  <HeaderWrapper>\r\n    <SitenameWrapper>\r\n      <Link><h1 css={[noMarginPaddingCss, siteTitleCss]}>HAFIZH</h1></Link>\r\n      <h2 css={[noMarginPaddingCss, css`margin-left: 0.25em;`]}>Adi Prasetya</h2>\r\n    </SitenameWrapper>\r\n    <SiteNavWrapper>\r\n      <SiteNavlink to=\"/blog/\"><h4 css={[noMarginPaddingCss, blackBoxCss]}>BLOG</h4></SiteNavlink>\r\n      <SiteNavlink to=\"/about/academic/\"><h4 css={[noMarginPaddingCss, blackBoxCss]}>ABOUT</h4></SiteNavlink>\r\n      {/*<SiteNavlink to=\"/\"><h4 css={[noMarginPaddingCss, blackBoxCss]}>Find Me</h4></SiteNavlink>*/}\r\n    </SiteNavWrapper>\r\n  </HeaderWrapper>\r\n)\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport Img from \"gatsby-image\";\r\n\r\nimport Header from \"./header\"\r\n\r\nimport { css } from \"@emotion/core\"\r\nimport styled from \"@emotion/styled\"\r\n\r\nconst PageWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 0 1.5em 1em 1.5em;\r\n`\r\n\r\nconst ContentWrapper = styled.div`\r\n  display: flex;\r\n\r\n  flex-flow: column wrap;\r\n  justify-content: center;\r\n  \r\n  width: 900px;\r\n  max-width: 900px;\r\n`\r\n\r\nconst Layout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n      file(relativePath: { eq: \"icon.png\" }) {\r\n      childImageSharp {\r\n        # Specify the image processing specifications right in the query.\r\n        # Makes it trivial to update as your page's design changes.\r\n        fixed(height: 25) {\r\n          ...GatsbyImageSharpFixed\r\n        }\r\n      }\r\n    }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <ContentWrapper>\r\n        <Header siteTitle={data.site.siteMetadata.title} />\r\n        \r\n        <div>\r\n          <main>\r\n            {children}\r\n          </main>\r\n        </div>\r\n        \r\n        <footer css={css`align-self: center;`}>\r\n          <h5 css={css`margin: 1em; padding: 0;`}>© {new Date().getFullYear()} HAFIZH ADI PRASETYA</h5>\r\n        </footer>\r\n        <Img css={css`align-self: center; margin: 0; padding: 0;`} fixed={data.file.childImageSharp.fixed} />\r\n      </ContentWrapper>\r\n    </PageWrapper>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}